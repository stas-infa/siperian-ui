<?xml version="1.0" encoding="ISO-8859-1"?>


<taglib xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-jsptaglibrary_2_1.xsd"
    version="2.1">
 <tlib-version>9.5</tlib-version>
 <short-name>comboBox</short-name>
 <uri>http://siperian.exadel.com/sip</uri>



					 <tag>
	  	  <description>The &amp;lt;rich:comboBox&amp;gt; is a component, that provides editable combo box element on a page.</description>
	  	  	  		  <name>comboBox</name>
	  	  <tag-class>com.exadel.siperian.taglib.ComboBoxTag</tag-class>
	  <body-content>JSP</body-content>
	  
	    	  	  	  		  <attribute>
	   <description>Determine Sip combox behaviour</description>
	   <name>behaviourStrategy</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The attribute takes a value-binding expression for a component property of
a backing bean</description>
	   <name>binding</name>
	   	   	   					   	<deferred-value>
					<type>javax.faces.component.UIComponent</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Style Class attribute for the button</description>
	   <name>buttonClass</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Style Class attribute for the disabled button</description>
	   <name>buttonDisabledClass</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>CSS style rules to be applied to disabled button</description>
	   <name>buttonDisabledStyle</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Defines icon for the button element</description>
	   <name>buttonIcon</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Defines disabled icon for the button element</description>
	   <name>buttonIconDisabled</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Defines inactive icon for the button element</description>
	   <name>buttonIconInactive</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Style Class attribute for the inactive button</description>
	   <name>buttonInactiveClass</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>CSS style rules to be applied to inactive button</description>
	   <name>buttonInactiveStyle</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>CSS style rules to be applied to button</description>
	   <name>buttonStyle</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Id of Converter to be used or reference to a Converter</description>
	   <name>converter</name>
	   	   	   					   	<deferred-value>
					<type>javax.faces.convert.Converter</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>A ValueExpression enabled attribute that, if present,
			will be used as the text of the converter message,
			replacing any message that comes from the converter</description>
	   <name>converterMessage</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Defines default label for the input field element</description>
	   <name>defaultLabel</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Defines the first value from the suggested in input field. Default value is "false".</description>
	   <name>directInputSuggestions</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.Boolean</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>When set for a form control, this boolean attribute disables the control for your input</description>
	   <name>disabled</name>
	   	   	   					   	<deferred-value>
					<type>boolean</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Enables  keyboard input, if "false" keyboard input will be locked. Default value is "true"</description>
	   <name>enableManualInput</name>
	   	   	   					   	<deferred-value>
					<type>boolean</type>
				</deferred-value>
				   	  </attribute>
		  	  		  <attribute>
	   <description>Defines the appearance of values in the list. Default value is "true".</description>
	   <name>filterNewValues</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.Boolean</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Delay between losing focus and pop-up list closing. Default value is "0".</description>
	   <name>hideDelay</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.Integer</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Every component may have a unique id that is automatically created if omitted</description>
	   <name>id</name>
	   	   	   		<rtexprvalue>false</rtexprvalue>
	   		<type>java.lang.String</type>
	   	  </attribute>
		  		  <attribute>
	   <description>A flag indicating that this component value must be converted
            and validated immediately (that is, during Apply Request Values
            phase), rather than waiting until a Process Validations phase</description>
	   <name>immediate</name>
	   	   	   					   	<deferred-value>
					<type>boolean</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Style Class attribute for the input field</description>
	   <name>inputClass</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Style Class attribute for the disabled input</description>
	   <name>inputDisabledClass</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>CSS style rules to be applied to disabled input</description>
	   <name>inputDisabledStyle</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Style Class attribute for the inactive input</description>
	   <name>inputInactiveClass</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>CSS style rules to be applied to inactive input</description>
	   <name>inputInactiveStyle</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>CSS style rules to be applied to input field</description>
	   <name>inputStyle</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Style Class attribute for the items</description>
	   <name>itemClass</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Style Class attribute for the selected item</description>
	   <name>itemSelectedClass</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>A localized user presentable name for this component.</description>
	   <name>label</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Style Class attribute for the popup list</description>
	   <name>listClass</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Defines height of file pop-up list. Default value is "200px".</description>
	   <name>listHeight</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>CSS style rules to be applied to popup list</description>
	   <name>listStyle</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Defines width of file popup list</description>
	   <name>listWidth</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  	  	  	  		  <attribute>
	   <description>The client side script method to be called when the element loses the focus</description>
	   <name>onblur</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when the element value is changed</description>
	   <name>onchange</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The clientside script method to be called when the element is clicked</description>
	   <name>onclick</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when the element is double-clicked</description>
	   <name>ondblclick</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when the element gets the focus</description>
	   <name>onfocus</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when a key is pressed down over the element</description>
	   <name>onkeydown</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when a key is pressed over the element and released</description>
	   <name>onkeypress</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when a key is released</description>
	   <name>onkeyup</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>HTML: script expression; a list is called</description>
	   <name>onlistcall</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>HTML: script expression; a list is closed</description>
	   <name>onlistclose</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when a mouse button is pressed down over the element</description>
	   <name>onmousedown</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when a pointer is moved within the element</description>
	   <name>onmousemove</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when a pointer is moved away from the element</description>
	   <name>onmouseout</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when a pointer is moved onto the element</description>
	   <name>onmouseover</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when a mouse button is released</description>
	   <name>onmouseup</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when some text is selected in the text field. This attribute can be used with the INPUT and TEXTAREA elements.</description>
	   <name>onselect</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>If "false", this component is not rendered</description>
	   <name>rendered</name>
	   	   	   					   	<deferred-value>
					<type>boolean</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>If "true", this component is checked for non-empty input</description>
	   <name>required</name>
	   	   	   					   	<deferred-value>
					<type>boolean</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>A ValueExpression enabled attribute that, if present,
			will be used as the text of the validation message for
			the "required" facility, if the "required" facility is
			used</description>
	   <name>requiredMessage</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Defines if the first value from suggested is selected in pop-up list. Default value is "true".</description>
	   <name>selectFirstOnUpdate</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.Boolean</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Delay between event and pop-up list showing. Default value is "0".</description>
	   <name>showDelay</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.Integer</type>
				</deferred-value>
				   	  </attribute>
		  	  		  <attribute>
	   <description>CSS style(s) is/are to be applied when this component is rendered</description>
	   <name>style</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Corresponds to the HTML class attribute</description>
	   <name>styleClass</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Defines the suggestion collection</description>
	   <name>suggestionValues</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.Object</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>This attribute specifies the position of the current element in the tabbing order for the current document. This value must be a number between 0 and 32767. User agents should ignore leading zeros</description>
	   <name>tabindex</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  	  		  <attribute>
	   <description>MethodBinding pointing at a method that is called during
            Process Validations phase of the request processing lifecycle,
            to validate the current value of this component</description>
	   <name>validator</name>
	   	   	   						<deferred-method>
					<method-signature>void validator(javax.faces.context.FacesContext, javax.faces.component.UIComponent, java.lang.Object)</method-signature>
				</deferred-method>
				   	  </attribute>
		  		  <attribute>
	   <description>A ValueExpression enabled attribute that, if present,
			will be used as the text of the validator message,
			replacing any message that comes from the validator</description>
	   <name>validatorMessage</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  	  		  <attribute>
	   <description>The current value of this component</description>
	   <name>value</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.Object</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Listener for value changes</description>
	   <name>valueChangeListener</name>
	   	   	   						<deferred-method>
					<method-signature>void valueChangeListener(javax.faces.event.ValueChangeEvent)</method-signature>
				</deferred-method>
				   	  </attribute>
		  	  		  <attribute>
	   <description>Width of the component. Default value is "150".</description>
	   <name>width</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  	  
	</tag>
	
				
  
</taglib>
