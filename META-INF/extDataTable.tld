<?xml version="1.0" encoding="ISO-8859-1"?>


<taglib xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-jsptaglibrary_2_1.xsd"
    version="2.1">
 <tlib-version>9.5</tlib-version>
 <short-name>extDataTable</short-name>
 <uri>http://siperian.exadel.com/extDataTable</uri>



					 <tag>
	  	  <description>The &amp;lt;rich:extendedDataTable&amp;gt; component is used for
                              tables extending standard component &amp;lt;rich:dataTable&amp;gt; .</description>
	  	  	  		  <name>extendedDataTable</name>
	  	  <tag-class>com.exadel.siperian.taglib.ExtendedDataTableTag</tag-class>
	  <body-content>JSP</body-content>
	  
	    		  <attribute>
	   <description>CSS class for active row</description>
	   <name>activeClass</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Request scope attribute under which the activeRowKey will
                                        be accessible</description>
	   <name>activeRowKey</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.Object</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>This attribute defines row keys that are updated after an
                                        AJAX request</description>
	   <name>ajaxKeys</name>
	   	   	   					   	<deferred-value>
					<type>java.util.Set</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Deprecated. This attribute specifies the position of the table with respect to the document. 
            The possible values are "left", "center" and "right". The default value is "left".</description>
	   <name>align</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  	  		  <attribute>
	   <description>Allow or not cell selection by default false.</description>
	   <name>allowCellSelection</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.Boolean</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>false to disable columns resize functionality</description>
	   <name>allowColumnResize</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.Boolean</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>false to disable hide columns functionality</description>
	   <name>allowColumnsHide</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.Boolean</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Deprecated. This attribute sets the background color for the document body or table cells.
            
            This attribute sets the background color of the canvas for the document body (the BODY element) or for tables (the TABLE, TR, TH, and TD elements). Additional attributes for specifying text color can be used with the BODY element.
            
            This attribute has been deprecated in favor of style sheets for specifying background color information</description>
	   <name>bgcolor</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The attribute takes a value-binding expression for a component property of
a backing bean</description>
	   <name>binding</name>
	   	   	   					   	<deferred-value>
					<type>javax.faces.component.UIComponent</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>This attributes specifies the width of the frame around a
                                        component</description>
	   <name>border</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Space-separated list of CSS style class(es) that are be
                                        applied to caption for this component</description>
	   <name>captionClass</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>CSS style(s) is/are to be applied to caption when this
                                        component is rendered</description>
	   <name>captionStyle</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  	  		  <attribute>
	   <description>This attribute specifies the amount of space between the
                                        border of the cell and its contents</description>
	   <name>cellpadding</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>This attribute specifies the amount of space between the
                                        border of the cell and its contents. The attribute also
                                        specifies the amount of space to leave between cells</description>
	   <name>cellspacing</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  	  		  <attribute>
	   <description>Comma-delimited list of CSS style classes that are be applied to the columns of this table. A space separated list of classes may also be specified for any individual column. If the number of elements in this list is less than the number of columns specified in the "columns" attribute, no "class" attribute is output for each column greater than the number of elements in the list. If the number of elements in the list is greater than the number of columns specified in the "columns" attribute, the elements at the position in the list after the value of the "columns" attribute are ignored</description>
	   <name>columnClasses</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>It defines EL-binding for a component state for saving or
                                        redefinition</description>
	   <name>componentState</name>
	   	   	   					   	<deferred-value>
					<type>org.ajax4jsf.model.DataComponentState</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>countOfForceSort</description>
	   <name>countOfForceSort</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Direction indication for text that does not inherit
			directionality. Valid values are "LTR" (left-to-right)
			and "RTL" (right-to-left)</description>
	   <name>dir</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>false to hide the scroll</description>
	   <name>dndSupported</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.Boolean</type>
				</deferred-value>
				   	  </attribute>
		  	  	  		  <attribute>
	   <description>A zero-relative row number of the first row to display</description>
	   <name>first</name>
	   	   	   					   	<deferred-value>
					<type>int</type>
				</deferred-value>
				   	  </attribute>
		  	  		  <attribute>
	   <description>Space-separated list of CSS style class(es) that are be
                                        applied to footer for this component</description>
	   <name>footerClass</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Default true rerender after sorting</description>
	   <name>forseSorting</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.Boolean</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>This attribute specifies which sides of the frame surrounding a table will be visible. Possible values:  "void", "above", "below", "hsides", "lhs", "rhs", "vsides", "box" and "border".
        The default value is "void".</description>
	   <name>frame</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Frozen columns number</description>
	   <name>frozenColumns</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.Integer</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description></description>
	   <name>groupColumnWidth</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The information in the table wiil be grouped by the
                                        information in the column, which id is provided with this
                                        attribute.</description>
	   <name>groupingColumn</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  	  	  		  <attribute>
	   <description>Space-separated list of CSS style class(es) that are be
                                        applied to header for this component</description>
	   <name>headerClass</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Defines a height of the component. Default value is 500px</description>
	   <name>height</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Default true rerender after sorting</description>
	   <name>horizontalScrolling</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.Boolean</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>CSS class for row with mouse over</description>
	   <name>hoverRowClass</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Every component may have a unique id that is automatically created if omitted</description>
	   <name>id</name>
	   	   	   		<rtexprvalue>false</rtexprvalue>
	   		<type>java.lang.String</type>
	   	  </attribute>
		  		  <attribute>
	   <description>${prop.xmlEncodedDescription}</description>
	   <name>inlineEditing</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.Boolean</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Code describing the language used in the generated markup for this component</description>
	   <name>lang</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>HTML: a script expression; a pointer button is clicked
                                        on row</description>
	   <name>onRowClick</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>HTML: a script expression; a pointer button is clicked
                                        on row</description>
	   <name>onRowContextMenu</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>HTML: a script expression; a pointer button is
                                        double-clicked on row</description>
	   <name>onRowDblClick</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>HTML: script expression; a pointer button is pressed down
                                        on row</description>
	   <name>onRowMouseDown</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>HTML: a script expression; a pointer is moved within of
                                        row</description>
	   <name>onRowMouseMove</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>HTML: a script expression; a pointer is moved away of row</description>
	   <name>onRowMouseOut</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>HTML: a script expression; a pointer is moved onto of row</description>
	   <name>onRowMouseOver</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>HTML: script expression; a pointer button is released on
                                        row</description>
	   <name>onRowMouseUp</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The clientside script method to be called when the element is clicked</description>
	   <name>onclick</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when the element is double-clicked</description>
	   <name>ondblclick</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when a key is pressed down over the element</description>
	   <name>onkeydown</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when a key is pressed over the element and released</description>
	   <name>onkeypress</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when a key is released</description>
	   <name>onkeyup</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Handler for update layout event</description>
	   <name>onlayoutupdate</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when a mouse button is pressed down over the element</description>
	   <name>onmousedown</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when a pointer is moved within the element</description>
	   <name>onmousemove</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when a pointer is moved away from the element</description>
	   <name>onmouseout</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when a pointer is moved onto the element</description>
	   <name>onmouseover</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when a mouse button is released</description>
	   <name>onmouseup</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>HTML: a script expression; table content is scrolled</description>
	   <name>onscroll</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>HTML: script expression to invoke on changing of rows
                                        selection</description>
	   <name>onselectionchange</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>If "false", this component is not rendered</description>
	   <name>rendered</name>
	   	   	   					   	<deferred-value>
					<type>boolean</type>
				</deferred-value>
				   	  </attribute>
		  	  	  	  	  		  <attribute>
	   <description>A comma-delimited list of CSS style classes that is applied to popup table rows. A space separated list of classes may also be specified for any individual row. The styles are applied, in turn, to each row in the table. For example, if the list has two elements, the first style class in the list is applied to the first row, the second to the second row, the first to the third row, the second to the fourth row, etc. In other words, we keep iterating through the list until we reach the end, and then we start at the beginning again</description>
	   <name>rowClasses</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  	  	  	  	  		  <attribute>
	   <description>Converter for a row key object</description>
	   <name>rowKeyConverter</name>
	   	   	   					   	<deferred-value>
					<type>javax.faces.convert.Converter</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The attribute provides access to a row key in a Request
                                        scope</description>
	   <name>rowKeyVar</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>A number of rows to display, or zero for all remaining
            rows in the table</description>
	   <name>rows</name>
	   	   	   					   	<deferred-value>
					<type>int</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>This attribute specifies which rules will appear between cells within a table. The rendering of rules is user agent dependent. Possible values:
            
            * none: No rules. This is the default value.
            * groups: Rules will appear between row groups (see THEAD, TFOOT, and TBODY) and column groups (see COLGROUP and COL) only.
            * rows: Rules will appear between rows only.
            * cols: Rules will appear between columns only.
            * all: Rules will appear between all rows and columns</description>
	   <name>rules</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  	  		  <attribute>
	   <description>false to hide the scroll</description>
	   <name>scrollable</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Css style class that define styles for highlighted cell</description>
	   <name>selectedCellClass</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>CSS class for selected rows</description>
	   <name>selectedClass</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Value binding representing selected rows</description>
	   <name>selection</name>
	   	   	   					   	<deferred-value>
					<type>org.richfaces.model.selection.Selection</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>single [default]: Single row can be selected. multi:
                                        Multiple rows can be selected. none: no rows can be
                                        selected.</description>
	   <name>selectionMode</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  	  		  <attribute>
	   <description>Defines mode of sorting. Possible values are 'single'
                                        for sorting of one column and 'multi' for some.</description>
	   <name>sortMode</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Defines a set of column ids in the order the columns
                                        could be set</description>
	   <name>sortPriority</name>
	   	   	   					   	<deferred-value>
					<type>java.util.Collection</type>
				</deferred-value>
				   	  </attribute>
		  	  	  		  <attribute>
	   <description>The attribute provides access to a component state on
                                        the client side</description>
	   <name>stateVar</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>CSS style(s) is/are to be applied when this component is rendered</description>
	   <name>style</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Corresponds to the HTML class attribute</description>
	   <name>styleClass</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>${prop.xmlEncodedDescription}</description>
	   <name>subRows</name>
	   	   	   					   	<deferred-value>
					<type>java.util.List</type>
				</deferred-value>
				   	  </attribute>
		  	  		  <attribute>
	   <description>ValueBinding pointing at a property of a String to hold
                                        table state</description>
	   <name>tableState</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Advisory title information about markup elements generated for this component</description>
	   <name>title</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The current value for this component</description>
	   <name>value</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.Object</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>A request-scope attribute via which the data object for the
            current row will be used when iterating</description>
	   <name>var</name>
	   	   	   		<rtexprvalue>false</rtexprvalue>
	   		<type>java.lang.String</type>
	   	  </attribute>
		  	  		  <attribute>
	   <description>This attribute specifies the desired width of the entire table and is intended for visual user agents. When the value is percentage value, the value is relative to the user agent's available horizontal space. In the absence of any width specification, table width is determined by the user agent</description>
	   <name>width</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  	  
	</tag>
	
				
  
</taglib>
