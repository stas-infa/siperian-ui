<?xml version="1.0" encoding="ISO-8859-1"?>


<taglib xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-jsptaglibrary_2_1.xsd"
    version="2.1">
 <tlib-version>9.5</tlib-version>
 <short-name>timeline</short-name>
 <uri>http://siperian.exadel.com/sip</uri>



					 <tag>
	  	  <description></description>
	  	  	  		  <name>timeline</name>
	  	  <tag-class>com.exadel.siperian.taglib.TimelineTag</tag-class>
	  <body-content>JSP</body-content>
	  
	    		  <attribute>
	   <description>binding</description>
	   <name>binding</name>
	   	   	   					   	<deferred-value>
					<type>javax.el.ValueExpression</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>${prop.xmlEncodedDescription}</description>
	   <name>dataModel</name>
	   	   	   					   	<deferred-value>
					<type>com.exadel.siperian.model.TimeLineDataModel</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Set of colors should be defined with list of Color objects or list of String color values</description>
	   <name>eventBoxColors</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The attribute defines allowed percentage of superposition the Event boxes. On exceeding the value Event boxes need to be displayed as Event group</description>
	   <name>eventBoxSuperposition</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The attribute defines width of the Event box as well as width of Group box in pixels</description>
	   <name>eventBoxWidth</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.Integer</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Interval between two events used for groups union.</description>
	   <name>eventInterval</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The menu identifier this menu will be show when we click by event</description>
	   <name>eventMenuId</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Menu items for events .</description>
	   <name>eventMenuItems</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>common css style class for events on scroller</description>
	   <name>eventStyleClass</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  	  		  <attribute>
	   <description>${prop.xmlEncodedDescription}</description>
	   <name>flashWmode</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>${prop.xmlEncodedDescription}</description>
	   <name>fromDate</name>
	   	   	   					   	<deferred-value>
					<type>java.util.Date</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Global menu items for Safari browser flash menu.</description>
	   <name>globalMenuItems</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>common css style class for groups when group is hovered</description>
	   <name>groupHoverStyleClass</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>common css style class for groups when group is selected</description>
	   <name>groupSelectedStyleClass</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>common css style class for groups</description>
	   <name>groupStyleClass</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The attribute defines content of the tooltip</description>
	   <name>groupTooltipTemplate</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>header</description>
	   <name>header</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>${prop.xmlEncodedDescription}</description>
	   <name>height</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>id</description>
	   <name>id</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>maximum count of events that will displayed in tooltip if 0(by default) then unlimited</description>
	   <name>maxDisplaedEventsInToolTip</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.Integer</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>A configurable parameter to define the smallest visible interval supported</description>
	   <name>maximumZoomResolution</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.Integer</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>defined an javascript handler that will invoke when timeline inited.</description>
	   <name>ontimelineinit</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>defined an javascript handler that will invoke when timeline zoomer change.</description>
	   <name>onzoomerchange</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Global menu identifier</description>
	   <name>popupMenuId</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>rendered</description>
	   <name>rendered</name>
	   	   	   					   	<deferred-value>
					<type>boolean</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>if true then if user not have a flash player will display link to the flash player. By default false</description>
	   <name>showFlashPlayerInstall</name>
	   	   	   					   	<deferred-value>
					<type>boolean</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>${prop.xmlEncodedDescription}</description>
	   <name>styleClass</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>swinlane css class</description>
	   <name>swimLaneClass</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>store state for the timeline component.</description>
	   <name>timelineState</name>
	   	   	   					   	<deferred-value>
					<type>com.exadel.siperian.model.ITimeLineState</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>path to the file where template for the group tooltip located.</description>
	   <name>timlineStylesheet</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>${prop.xmlEncodedDescription}</description>
	   <name>toDate</name>
	   	   	   					   	<deferred-value>
					<type>java.util.Date</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>${prop.xmlEncodedDescription}</description>
	   <name>width</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>zoomer indent from first event in timeline. By default 10</description>
	   <name>zoomerIndent</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.Integer</type>
				</deferred-value>
				   	  </attribute>
		  	  
	</tag>
	
				
  
</taglib>
