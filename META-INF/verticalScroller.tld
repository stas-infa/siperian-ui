<?xml version="1.0" encoding="ISO-8859-1"?>


<taglib xmlns="http://java.sun.com/xml/ns/javaee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-jsptaglibrary_2_1.xsd"
    version="2.1">
 <tlib-version>9.5</tlib-version>
 <short-name>verticalScroller</short-name>
 <uri>http://siperian.exadel.com/vertical</uri>



					 <tag>
	  	  <description>The &amp;lt;rich:datascroller&amp;gt; component is designed for providing the functionality of tables scrolling using Ajax requests.</description>
	  	  	  		  <name>verticalScroller</name>
	  	  <tag-class>com.exadel.siperian.taglib.VerticalScrollerTag</tag-class>
	  <body-content>JSP</body-content>
	  
	    		  <attribute>
	   <description>MethodBinding pointing at the application action to be invoked,
            if this UIComponent is activated by you, during the Apply
            Request Values or Invoke Application phase of the request
            processing lifecycle, depending on the value of the immediate
            property</description>
	   <name>action</name>
	   	   	   						<deferred-method>
					<method-signature>java.lang.Object action()</method-signature>
				</deferred-method>
				   	  </attribute>
		  	  		  <attribute>
	   <description>MethodBinding pointing at method accepting  an ActionEvent with return type void</description>
	   <name>actionListener</name>
	   	   	   						<deferred-method>
					<method-signature>void actionListener(javax.faces.event.ActionEvent)</method-signature>
				</deferred-method>
				   	  </attribute>
		  	  	  		  <attribute>
	   <description>Boolean attribute which provides possibility to limit JSF tree processing(decoding, conversion/validation, value applying) to the component which send the request only.</description>
	   <name>ajaxSingle</name>
	   	   	   					   	<deferred-value>
					<type>boolean</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>This attribute specifies the position of the table with relatively to  the document.
			Possible values are "left","center","right ". Default value is "center".</description>
	   <name>align</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The attribute takes a value-binding expression for a component property of
a backing bean</description>
	   <name>binding</name>
	   	   	   					   	<deferred-value>
					<type>javax.faces.component.UIComponent</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The attribute specifies the visibility of boundaryControls. 
				Possible values are: "show"  (controls are always visible ). "hide" (controls are hidden. 
				"auto" (unnecessary controls are hidden). Default value is "show".</description>
	   <name>boundaryControls</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>If "true", after process validations phase it skips updates of model beans on a force render response. It can be used for validating components input</description>
	   <name>bypassUpdates</name>
	   	   	   					   	<deferred-value>
					<type>boolean</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Serialized (on default with JSON) data passed on the client by a developer on AJAX request. It's accessible via "data.foo" syntax</description>
	   <name>data</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.Object</type>
				</deferred-value>
				   	  </attribute>
		  	  		  <attribute>
	   <description>Name of requests queue to avoid send next request before complete other from same event. Can be used to reduce number of requests of frequently events (key press, mouse move etc.)</description>
	   <name>eventsQueue</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  	  		  <attribute>
	   <description>The attribute specifies the visibility of fastControls.
				Possible values are: "show"  (controls are always visible ). "hide" (controls are hidden. 
				"auto" (unnecessary controls are hidden). Default value is "show".</description>
	   <name>fastControls</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  	  	  		  <attribute>
	   <description>The attribute indicates pages quantity to switch onto when fast scrolling is used. Default value is "0".</description>
	   <name>fastStep</name>
	   	   	   					   	<deferred-value>
					<type>int</type>
				</deferred-value>
				   	  </attribute>
		  	  	  		  <attribute>
	   <description>id of element to set focus after request completed on client side</description>
	   <name>focus</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>ID of the table component whose data is scrollled</description>
	   <name>for</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Current handle value</description>
	   <name>handleValue</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Component height</description>
	   <name>height</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Every component may have a unique id that is automatically created if omitted</description>
	   <name>id</name>
	   	   	   		<rtexprvalue>false</rtexprvalue>
	   		<type>java.lang.String</type>
	   	  </attribute>
		  		  <attribute>
	   <description>Attribute allows to ignore an Ajax Response produced by a request if the newest 'similar' request is
in a queue already. ignoreDupResponses="true" does not cancel the request while it is processed on the server,
but just allows to avoid unnecessary updates on the client side if the response isn't actual now. Default value is "true".</description>
	   <name>ignoreDupResponses</name>
	   	   	   					   	<deferred-value>
					<type>boolean</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>A flag indicating that this component value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until a Process Validations phase</description>
	   <name>immediate</name>
	   	   	   					   	<deferred-value>
					<type>boolean</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Corresponds to the HTML style attribute for the inactive cell on scroller</description>
	   <name>inactiveStyle</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Corresponds to the HTML class attribute for the inactive cell on scroller</description>
	   <name>inactiveStyleClass</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  	  		  <attribute>
	   <description>If "true", then of all AJAX-rendered on the page components only those will be updated, 
		which ID's are passed to the "reRender" attribute of the describable component. 
		"false"-the default value-means that all components with ajaxRendered="true" will be updated.</description>
	   <name>limitToList</name>
	   	   	   					   	<deferred-value>
					<type>boolean</type>
				</deferred-value>
				   	  </attribute>
		  	  	  		  <attribute>
	   <description>The client side script method to be called before DOM is updated</description>
	   <name>onbeforedomupdate</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The clientside script method to be called when the element is clicked</description>
	   <name>onclick</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called after the request is completed</description>
	   <name>oncomplete</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when the element is double-clicked</description>
	   <name>ondblclick</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when a key is pressed down over the element</description>
	   <name>onkeydown</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when a key is pressed over the element and released</description>
	   <name>onkeypress</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when a key is released</description>
	   <name>onkeyup</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when a mouse button is pressed down over the element</description>
	   <name>onmousedown</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when a pointer is moved within the element</description>
	   <name>onmousemove</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when a pointer is moved away from the element</description>
	   <name>onmouseout</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when a pointer is moved onto the element</description>
	   <name>onmouseover</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The client side script method to be called when a mouse button is released</description>
	   <name>onmouseup</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>JavaScript handler for call after the page is changed</description>
	   <name>onpagechange</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>If page &amp;gt;= 1 then it's a page number to show</description>
	   <name>page</name>
	   	   	   					   	<deferred-value>
					<type>int</type>
				</deferred-value>
				   	  </attribute>
		  	  	  		  <attribute>
	   <description>Name of variable in request scope containing index of active page</description>
	   <name>pageIndexVar</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Name of variable in request scope containing number of pages</description>
	   <name>pagesVar</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  	  		  <attribute>
	   <description>Id['s] (in format of call  UIComponent.findComponent()) of components, processed at the phases 2-5 in case of AjaxRequest  caused by this component. Can be single id, comma-separated list of Id's, or EL Expression  with array or Collection</description>
	   <name>process</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.Object</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Id['s] (in format of call  UIComponent.findComponent()) of components, rendered in case of AjaxRequest  caused by this component. Can be single id, comma-separated list of Id's, or EL Expression  with array or Collection</description>
	   <name>reRender</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.Object</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>If renderIfSinglePage is "true" then datascroller is displayed on condition that the data hold on one page. Default value is "true".</description>
	   <name>renderIfSinglePage</name>
	   	   	   					   	<deferred-value>
					<type>boolean</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>If "false", this component is not rendered</description>
	   <name>rendered</name>
	   	   	   					   	<deferred-value>
					<type>boolean</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Attribute defines the time (in ms.) that the request will be wait in the queue before it is ready to send.
When the delay time is over, the request will be sent to the server or removed if the newest 'similar' request is in a queue already</description>
	   <name>requestDelay</name>
	   	   	   					   	<deferred-value>
					<type>int</type>
				</deferred-value>
				   	  </attribute>
		  	  		  <attribute>
	   <description>MethodBinding representing an action listener method that will be notified after scrolling</description>
	   <name>scrollerListener</name>
	   	   	   						<deferred-method>
					<method-signature>void scrollerListener(org.richfaces.event.DataScrollerEvent)</method-signature>
				</deferred-method>
				   	  </attribute>
		  	  		  <attribute>
	   <description>Corresponds to the HTML style attribute for the selected cell on scroller</description>
	   <name>selectedStyle</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Corresponds to the HTML class attribute for the selected cell on scroller</description>
	   <name>selectedStyleClass</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>If there are any component requests with identical IDs then these requests will be grouped.</description>
	   <name>similarityGroupingId</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>ID (in format of call UIComponent.findComponent()) of Request status component</description>
	   <name>status</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The attribute specifies the visibility of stepControls.
				Possible values are: "show"  (controls are always visible ). "hide" (controls are hidden. 
				"auto" (unnecessary controls are hidden). Default value is "show".</description>
	   <name>stepControls</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>CSS style(s) is/are to be applied when this component is rendered</description>
	   <name>style</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Corresponds to the HTML class attribute</description>
	   <name>styleClass</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>CSS style(s) is/are to be applied to outside table when this component is rendered</description>
	   <name>tableStyle</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Space-separated list of CSS style class(es) that are be applied to outside table of this component</description>
	   <name>tableStyleClass</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.String</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>Response waiting time on a particular request. If a response is not received during this time, the request is aborted</description>
	   <name>timeout</name>
	   	   	   					   	<deferred-value>
					<type>int</type>
				</deferred-value>
				   	  </attribute>
		  		  <attribute>
	   <description>The current value for this component</description>
	   <name>value</name>
	   	   	   					   	<deferred-value>
					<type>java.lang.Object</type>
				</deferred-value>
				   	  </attribute>
		  	  
	</tag>
	
				
  
</taglib>
